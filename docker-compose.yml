version: '3.7'

services:

  frontend:
    build:
      args:
        - NODE_VER=18.15.0-slim
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    tty: true
    volumes:
      - ./frontend:/home/node/app
    ports:
      - 5173:5173
    networks:
      - app-network
    restart: always

  backend:
    build: backend
    container_name: backend
    volumes:
      - ./backend/:/go/src/app
    ports:
      - "8080:8080"
    networks:
      - app-network
      - db-network
    restart: always

  postgres:
    image: postgres:15.1-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGPASSWORD: ${PGPASSWORD}
      TZ: "Asia/Tokyo"
    volumes:
      - ./database/postgres:/var/lib/postgresql/data
    networks:
      - db-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - 81:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./database/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - db-network
    restart: always

networks:
  app-network:
  db-network:
